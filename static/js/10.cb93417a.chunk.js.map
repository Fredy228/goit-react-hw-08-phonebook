{"version":3,"file":"static/js/10.cb93417a.chunk.js","mappings":"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","sources":["components/ContactForm/Phonebook.styled.jsx","redux/selectors.jsx","components/ContactForm/Phonebook.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactsList.styled.jsx","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","pages/StylePages/Contacts.styled.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const From = styled.form`\n    width: 400px;\n    padding: 20px;\n    display: inline-flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-color: #ffffff;\n    border-radius: 15px;\n    box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\n\n    button {\n        max-width: 140px;\n    }\n`;\n\nexport const Label = styled.label`\n    margin-bottom: 15px;\n    input {\n        width: 300px;\n    }\n`;\n\n\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.value;","import {useState} from \"react\";\nimport {From, Label} from './Phonebook.styled';\nimport { addContact } from \"redux/operations\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { selectContacts } from \"redux/selectors\";\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\n\nconst Phonebook = () => {\n  const [nameContact, setNameContact] = useState('');\n    const [number, setNumber] = useState('');\n    const dispacth = useDispatch()\n    const contacts = useSelector(selectContacts);\n\n    const addNewContact = (name, number) => {\n        const haveContact = contacts.find( contact => contact.name === name || contact.number === number);\n        if(haveContact) {\n        alert(`${haveContact.name} is already in contacts`)\n        } else {\n        const newContacts = {\n            id: nanoid(),\n            name,\n            number\n        };\n        dispacth(addContact(newContacts));\n        }\n    }\n\n    const handleChange = event => {\n        const {value, name} = event.currentTarget;\n        switch (name) {\n            case 'name':\n                setNameContact(value)\n                break\n            case 'number':\n                setNumber(value)\n                break\n            default:\n                break;\n        }\n      }\n    \n    const submitForm = event => {\n        event.preventDefault();\n        addNewContact(nameContact, number);\n        setNameContact('');\n        setNumber('');\n\n    }\n    return (\n        <From onSubmit={submitForm}>\n        <Label>\n            <TextField \n            id=\"outlined-basic\" \n            label=\"Name\" \n            variant=\"outlined\"\n            type=\"text\"\n            name=\"name\"\n            value={nameContact}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required />\n        </Label>\n        <Label>\n            <TextField \n            id=\"outlined-basic\" \n            label=\"Number\" \n            variant=\"outlined\"\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n             />\n        </Label>\n        <Button variant=\"contained\" type='submit'>Add contact</Button>\n    </From>\n    )\n}\n\nexport default Phonebook","import styled from 'styled-components';\n\nexport const Label = styled.label`\n    font-size: 16px;\n    display: inline-flex;\n    flex-direction: column;\n\n    input {\n        width: 250px;\n    }\n`;\n\n","import {Label} from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleChangeFilter } from 'redux/filtersSlice'\nimport { selectFilter } from 'redux/selectors';\nimport TextField from '@mui/material/TextField';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  return (\n      <Label>\n          <TextField \n          id=\"filled-basic\" \n          label=\"Find contacts by name\" \n          variant=\"filled\"\n          type='text'\n          value={filter}\n          onChange={(e) => {dispatch(handleChangeFilter(e.currentTarget.value))}}\n           />\n      </Label>\n  )\n}\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const ListContacts = styled.ul`\n    margin: 10px 0;\n    max-width: 420px;\n    padding: 20px;\n    border-radius: 15px;\n    background-color: #fff;\n    box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\n`;\n\nexport const ItemContact = styled.li`\n    margin-bottom: 10px;\n    font-size: 16px;\n    display: flex;\n    flex-direction: column;\n    text-align: left;\n    position: relative;\n    border-radius: 10px;\n    padding: 10px;\n    box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;\n\n    button {\n        position: absolute;\n        top: 50%;\n        right: 10px;\n        transform: translate(0, -50%);\n    }\n`;\n\nexport const Text = styled.p`\n`;\n\nexport const Button = styled.button`\n    width: 70px;\n    height: 35px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\n\n\n\n","import { ProgressBar } from  'react-loader-spinner'\nexport const LoaderDelete = () => {\n    return(\n        <ProgressBar\n        height=\"30\"\n        width=\"30\"\n        ariaLabel=\"progress-bar-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"progress-bar-wrapper\"\n        borderColor = '#F4442E'\n        barColor = '#51E5FF'\n        />\n    )\n}","import {ListContacts, ItemContact, Text} from './ContactsList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport { selectContacts, selectFilter, selectIsLoading } from 'redux/selectors';\nimport { useRef } from 'react';\nimport { LoaderDelete } from 'components/Loader/Loader';\nimport Button from '@mui/material/Button';\n\n\nconst ContactList = () => {\n    const dispacth = useDispatch();\n    const contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n    const isLoading = useSelector(selectIsLoading);\n    const idContactDelete = useRef('');\n    \n    const renderCondition = () => {\n        if(filter.trim() !== '') {\n            return contacts.filter(contact => contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()));\n        } else {\n            return contacts;\n        }\n    }\n\n    return (\n        <ListContacts>\n            {renderCondition().length > 0 && renderCondition().map(({id, name, number}) => {\n                return (\n                    <ItemContact key={id}>\n                        <Text>{name}:</Text> \n                        <Text>- {number}</Text> \n                        <Button variant=\"outlined\" type='button' onClick={() => {\n                            dispacth(deleteContact(id));\n                            idContactDelete.current = id;                            \n                        }}>\n                          {isLoading && idContactDelete.current === String(id) && <LoaderDelete/>} \n                          {idContactDelete.current !== String(id) && 'Delete'}                   \n                        </Button>\n                    </ItemContact>\n                )\n            })}\n            {renderCondition().length === 0 && <Text>Not found name: {`${filter}`}</Text>}\n        </ListContacts>\n    )\n}\n\nexport default ContactList","import styled from 'styled-components';\n\nexport const TitleContacts = styled.h2`\n    margin: 20px 0 5px 0;\n`\nexport const BoxContacts = styled.div`\n    text-align: center;\n`;","import Phonebook from '../components/ContactForm/Phonebook';\nimport Filter from '../components/Filter/Filter';\nimport ContactsList from '../components/ContactList/ContactList';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getContacts } from 'redux/operations';\nimport { BoxContacts, TitleContacts } from './StylePages/Contacts.styled';\n\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch])\n\n    return (\n      <BoxContacts>\n        <TitleContacts>Phonebook</TitleContacts>\n        <Phonebook/>\n        <TitleContacts>Contacts</TitleContacts>\n        <Filter/>\n        <ContactsList/>\n      </BoxContacts>\n    )\n};\n\nexport default Contacts;"],"names":["From","styled","Label","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","value","useState","nameContact","setNameContact","number","setNumber","dispacth","useDispatch","useSelector","handleChange","event","currentTarget","name","onSubmit","preventDefault","haveContact","find","contact","alert","newContacts","id","nanoid","addContact","addNewContact","TextField","label","variant","type","onChange","pattern","title","required","Button","dispatch","e","handleChangeFilter","ListContacts","ItemContact","Text","LoaderDelete","height","width","ariaLabel","wrapperStyle","wrapperClass","borderColor","barColor","idContactDelete","useRef","renderCondition","trim","toLocaleLowerCase","includes","length","map","onClick","deleteContact","current","String","TitleContacts","BoxContacts","useEffect","getContacts"],"sourceRoot":""}